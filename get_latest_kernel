#!/usr/bin/env perl

use warnings;
use strict;

use Mojo::UserAgent;
use Mojo::DOM;
use List::Util qw/any/;
use POSIX qw/setsid/;
use Getopt::Long qw(:config gnu_compat no_bundling no_permute no_getopt_compat);
use lib::abs 'lib';
use Linux::Kernel::Get::Latest;

BEGIN {
   eval {
      require Smart::Comments;
      Smart::Comments->import();
   }
}

my %config;
$config{working_dir} = '.';
$config{daemon} = 0;
$config{minutes} = 10;

GetOptions(
   'daemon|d!'   => \$config{daemon},
   'minutes|m=i' => \$config{minutes},
) or die "Wrong command line arguments.\n";

if (@ARGV) {
   if ($#ARGV==0) {
      $config{working_dir} = $ARGV[0];
   } else {
      die "Wrong command line arguments.\n"
   }
}

unless (-d $config{working_dir} && -r _ && -x _) {
   die "Can't open directory $config{working_dir}\n"
}

### CONFIGURATION: %config

my $kernels = Linux::Kernel::Get::Latest::_get_available_kernels $config{working_dir};
### KERNELS: $kernels

if ($config{daemon}) {
   my $pid = fork();
   die "can't fork: $!"
      unless defined $pid;
   if ($pid) {
      print "$pid\n";
      exit 0;
   }
   setsid();
   open (STDIN,  '</dev/null');
   open (STDOUT, '>/dev/null');
   open (STDERR, '>&STDOUT');
}


my $ua = Mojo::UserAgent->new(max_redirects => 3);

CHECK:
get_latest_kernel($ua, $config{working_dir}, $kernels);

if ($config{daemon}) {
   sleep $config{minutes} * 60;
   goto CHECK
}

