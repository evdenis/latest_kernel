#!/usr/bin/env perl

use warnings;
use strict;

use Mojo::UserAgent;
use Mojo::DOM;
use List::Util qw/any/;
use POSIX qw/setsid/;
use Getopt::Long qw(:config gnu_compat no_permute no_getopt_compat pass_through);
use lib::abs 'lib';
use Linux::Kernel::Get::Latest;
use Module::Loader;

BEGIN {
   eval {
      require Smart::Comments;
      Smart::Comments->import();
   }
}

my %config;
$config{working_dir} = '.';
$config{daemon} = 0;
$config{minutes} = 10;
$config{plugins} = [];

GetOptions(
   'daemon|d!'       => \$config{daemon},
   'minutes|m=i'     => \$config{minutes},
   'load-plugins=s@' => \$config{plugins},
) or die "Wrong command line arguments.\n";
$config{plugins} = [ split(/,/, join(',', @{$config{plugins}})) ];

my $loader  = Module::Loader->new(max_depth => 1);
my @plugins;
my %pmap = map {lc(substr($_, rindex($_, ':') + 1)), $_} $loader->search('Linux::Kernel::Plugin');
foreach my $p (@{$config{plugins}}) {
   if (any {$p eq $_} keys %pmap) {
      ### LOADING PLUGIN: $p
      $loader->load($pmap{$p});
      push @plugins, $pmap{$p}->process_options(\%config);
   } else {
      die "There is no plugin: $p\n"
   }
}

@plugins = sort {$a->priority <=> $b->priority} @plugins;

if (@ARGV) {
   if ($#ARGV == 0 && (index($ARGV[0], '-') == -1)) {
      $config{working_dir} = $ARGV[0]
   } else {
      die "Wrong command line arguments.\n"
   }
}

unless (-d $config{working_dir} && -r _ && -x _) {
   die "Can't open directory $config{working_dir}\n"
}


### CONFIGURATION: %config

my $kernels = Linux::Kernel::Get::Latest::_get_available_kernels $config{working_dir};
### KERNELS: $kernels

if ($config{daemon}) {
   my $pid = fork();
   die "can't fork: $!"
      unless defined $pid;
   if ($pid) {
      print "$pid\n";
      exit 0;
   }
   setsid();
   open (STDIN,  '</dev/null');
   open (STDOUT, '>/dev/null');
   open (STDERR, '>&STDOUT');
}


my $ua = Mojo::UserAgent->new(max_redirects => 3);

CHECK:
my $file = get_latest_kernel($ua, $config{working_dir}, $kernels);
if ($file) {
   my %opts = (file => $file);
   foreach (@plugins) {
      $_->action(\%opts)
   }
}

if ($config{daemon}) {
   sleep $config{minutes} * 60;
   goto CHECK
}

