#!/usr/bin/env perl

use warnings;
use strict;

use Mojo::UserAgent;
use Mojo::DOM;
use List::Util qw/any/;
use POSIX qw/setsid/;
use Getopt::Long qw(:config gnu_compat no_bundling no_permute no_getopt_compat);

BEGIN {
   eval {
      require Smart::Comments;
      Smart::Comments->import();
   }
}

my %config;
$config{working_dir} = '.';
$config{daemon} = 0;
$config{minutes} = 10;

GetOptions(
   'daemon|d!'   => \$config{daemon},
   'minutes|m=i' => \$config{minutes},
) or die "Wrong command line arguments.\n";

if (@ARGV) {
   if ($#ARGV==0) {
      $config{working_dir} = $ARGV[0];
   } else {
      die "Wrong command line arguments.\n"
   }
}

unless (-d $config{working_dir} && -r _ && -x _) {
   die "Can't open directory $config{working_dir}\n"
}

### CONFIGURATION: %config

my @kernels = do {
   opendir ((my $fh), $config{working_dir});
   my @contents = readdir $fh;
   closedir $fh;
   grep { -f $_ && $_ =~ m/linux-\d\.\d\d\.tar\.xz/ } @contents;
};
### KERNELS: @kernels

if ($config{daemon}) {
   my $pid = fork();
   die "can't fork: $!"
      unless defined $pid;
   if ($pid) {
      print "$pid\n";
      exit 0;
   }
   setsid();
   open (STDIN,  '</dev/null');
   open (STDOUT, '>/dev/null');
   open (STDERR, '>&STDOUT');
}


my $kernel_page = 'https://www.kernel.org/';
$ENV{MOJO_MAX_MESSAGE_SIZE} = 1073741824; # 1GB

my $ua = Mojo::UserAgent->new(max_redirects => 3);

CHECK:
my $latest_link = $ua->get($kernel_page)
                     ->res
                     ->dom
                     ->find('#latest_link > a:nth-child(1)')
                     ->map(attr => 'href')
                     ->join("\n");

my $name = substr $latest_link, rindex($latest_link, '/') + 1;

### LATEST KERNEL: $name

unless (any { $name eq $_ } @kernels) {
### DOWNLOADING: $name
   $ua->get($kernel_page . $latest_link)
      ->res
      ->content
      ->asset
      ->move_to($name);
   push @kernels, $name;
}

if ($config{daemon}) {
   sleep $config{minutes} * 60;
   goto CHECK
}

